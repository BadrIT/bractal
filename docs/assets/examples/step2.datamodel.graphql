type Query {
  todo(todoId: ID!): Todo
  todosByUser(input: TodosUserInput!): TodosByUserResult!
  getUsers: User!
}

type Mutation {
  createTodo(data: TodoCreateInput!): Todo
  createUser(data: CreateUserInput!): User
  Signin(data: SignInInput): User
}

input TodosUserInput {
  userId: ID!
  page: PageInput
}

input CreateUserInput {
  name: String!
  password: String!
}

input SignInInput {
  name: String!
  password: String!
}

input TodoCreateInput {
  title: String!
  description: String!
  userId: ID!
}

input PageInput {
  limit: Int
  offset: Int
}

type TodosByUserResult {
  todos: [Todo!]!
  pageInfo: PageInfo!
}

type PageInfo {
  current_page : Int
  items_count: Int
  limit: Int
}

type Todo {
  id: ID!
  title: String!
  description: String!
  author: User
}

type User {
  id: ID!
  name: String!
  password: String!
  todos: [Todo!]!
}